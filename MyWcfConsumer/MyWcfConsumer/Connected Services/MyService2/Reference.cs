//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyWcfConsumer.MyService2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionList", Namespace="http://schemas.datacontract.org/2004/07/MySoapService")]
    [System.SerializableAttribute()]
    public partial class QuestionList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyWcfConsumer.MyService2.Question[] QuestionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyWcfConsumer.MyService2.Question[] Questions {
            get {
                return this.QuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsField, value) != true)) {
                    this.QuestionsField = value;
                    this.RaisePropertyChanged("Questions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/MySoapService")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyService2.IService2")]
    public interface IService2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetQuestionList", ReplyAction="http://tempuri.org/IService2/GetQuestionListResponse")]
        MyWcfConsumer.MyService2.Question[] GetQuestionList(MyWcfConsumer.MyService2.QuestionList questionList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetQuestionList", ReplyAction="http://tempuri.org/IService2/GetQuestionListResponse")]
        System.Threading.Tasks.Task<MyWcfConsumer.MyService2.Question[]> GetQuestionListAsync(MyWcfConsumer.MyService2.QuestionList questionList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/CreateQuestionList", ReplyAction="http://tempuri.org/IService2/CreateQuestionListResponse")]
        MyWcfConsumer.MyService2.QuestionList CreateQuestionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/CreateQuestionList", ReplyAction="http://tempuri.org/IService2/CreateQuestionListResponse")]
        System.Threading.Tasks.Task<MyWcfConsumer.MyService2.QuestionList> CreateQuestionListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/UpdateQuestionList", ReplyAction="http://tempuri.org/IService2/UpdateQuestionListResponse")]
        void UpdateQuestionList(MyWcfConsumer.MyService2.QuestionList questionList, int index, MyWcfConsumer.MyService2.Question newQ);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/UpdateQuestionList", ReplyAction="http://tempuri.org/IService2/UpdateQuestionListResponse")]
        System.Threading.Tasks.Task UpdateQuestionListAsync(MyWcfConsumer.MyService2.QuestionList questionList, int index, MyWcfConsumer.MyService2.Question newQ);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/DeleteQuestionList", ReplyAction="http://tempuri.org/IService2/DeleteQuestionListResponse")]
        void DeleteQuestionList(MyWcfConsumer.MyService2.QuestionList questionList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/DeleteQuestionList", ReplyAction="http://tempuri.org/IService2/DeleteQuestionListResponse")]
        System.Threading.Tasks.Task DeleteQuestionListAsync(MyWcfConsumer.MyService2.QuestionList questionList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService2Channel : MyWcfConsumer.MyService2.IService2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service2Client : System.ServiceModel.ClientBase<MyWcfConsumer.MyService2.IService2>, MyWcfConsumer.MyService2.IService2 {
        
        public Service2Client() {
        }
        
        public Service2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MyWcfConsumer.MyService2.Question[] GetQuestionList(MyWcfConsumer.MyService2.QuestionList questionList) {
            return base.Channel.GetQuestionList(questionList);
        }
        
        public System.Threading.Tasks.Task<MyWcfConsumer.MyService2.Question[]> GetQuestionListAsync(MyWcfConsumer.MyService2.QuestionList questionList) {
            return base.Channel.GetQuestionListAsync(questionList);
        }
        
        public MyWcfConsumer.MyService2.QuestionList CreateQuestionList() {
            return base.Channel.CreateQuestionList();
        }
        
        public System.Threading.Tasks.Task<MyWcfConsumer.MyService2.QuestionList> CreateQuestionListAsync() {
            return base.Channel.CreateQuestionListAsync();
        }
        
        public void UpdateQuestionList(MyWcfConsumer.MyService2.QuestionList questionList, int index, MyWcfConsumer.MyService2.Question newQ) {
            base.Channel.UpdateQuestionList(questionList, index, newQ);
        }
        
        public System.Threading.Tasks.Task UpdateQuestionListAsync(MyWcfConsumer.MyService2.QuestionList questionList, int index, MyWcfConsumer.MyService2.Question newQ) {
            return base.Channel.UpdateQuestionListAsync(questionList, index, newQ);
        }
        
        public void DeleteQuestionList(MyWcfConsumer.MyService2.QuestionList questionList) {
            base.Channel.DeleteQuestionList(questionList);
        }
        
        public System.Threading.Tasks.Task DeleteQuestionListAsync(MyWcfConsumer.MyService2.QuestionList questionList) {
            return base.Channel.DeleteQuestionListAsync(questionList);
        }
    }
}
